{"version":3,"sources":["pages/test/Test.module.scss","pages/login/Login.module.scss","pages/home/Home.module.scss","pages/registration/Registration.module.scss","common/components/inputText/InputText.module.scss","pages/profile/Profile.module.scss","app/header/Header.module.scss","pages/set-password/ForgotPassword/ForgotPassword.module.scss","pages/password-recovery/PasswordRecovery.module.scss","common/components/checkbox/Checkbox.module.scss","common/components/editableSpan/EditableSpan.module.scss","common/components/select/Select.module.scss","common/components/button/Button.module.scss","common/components/radioButton/Radio.module.scss","pages/404/ErrorPage.module.scss","pages/set-password/ForgotPasswordCheckEmail/ForgotPasswordCheckEmail.module.scss","app/App.module.scss","app/routes/Routes.tsx","reportWebVitals.ts","common/components/button/Button.tsx","common/components/inputText/InputText.tsx","common/components/checkbox/Checkbox.tsx","common/components/editableSpan/EditableSpan.tsx","common/components/select/Select.tsx","common/components/radioButton/Radio.tsx","common/components/range/Range.tsx","pages/test/Test.tsx","pages/404/ErrorPage.tsx","pages/set-password/ForgotPasswordCheckEmail/ForgotPasswordCheckEmail.tsx","dal/setPasswordAPI.ts","bll/reducers/setPasswordReducer.ts","common/assets/images/preloader.gif","common/components/preloader/Preloader.tsx","pages/set-password/ForgotPassword/ForgotPassword.tsx","pages/set-password/setPassword.tsx","dal/registrationAPI.ts","bll/reducers/registrationReducer.ts","pages/registration/Registration.tsx","dal/loginAPI.ts","bll/reducers/profileReducer.ts","bll/reducers/loginReducer.ts","pages/login/Login.tsx","common/assets/images/unknown.png","pages/profile/Profile.tsx","pages/password-recovery/PasswordRecovery.tsx","pages/home/Home.tsx","app/header/Header.tsx","app/App.tsx","bll/store.ts","index.tsx"],"names":["module","exports","ROUTES","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Button","red","className","value","restProps","finalClassName","s","default","InputText","type","onChange","onChangeText","onKeyPress","onEnter","error","label","labelClassName","errorClassName","finalSpanClassName","finalInputClassName","input","errorInput","superInput","divInput","e","currentTarget","key","Checkbox","onChangeChecked","children","spanClassName","checkbox","checked","EditableSpan","autoFocus","onBlur","spanProps","useState","editMode","setEditMode","onDoubleClick","restSpanProps","span","divSpan","Select","options","onChangeOption","mappedOptions","map","option","index","finalClasses","select","Radio","name","onChangeCallback","radio","Range","onChangeRange","finalRangeClassName","range","Test","textSpan","setTextSpan","valueForRadio","setValueForRadio","page","pageTitle","testBox","btn","disabled","style","display","flexDirection","ErrorPage","to","HOME","ForgotPasswordCheckEmail","email","useSelector","state","setPassword","instanceHeroku","axios","create","baseURL","instanceLocal","forgotPasswordAPI","data","post","from","message","password","resetPasswordToken","initialSetPasswordState","showModalWindow","status","errorEmail","errorPassword","loading","setLoading","Preloader","alt","width","margin","src","preloader","ForgotPassword","dispatch","useDispatch","emailState","errorEmailState","loadingState","setEmail","mainBlock","height","color","onClick","ghPagesAddress","response","saveEmail","console","log","info","catch","Error","finally","sendInstructionTC","LOGIN","SetPassword","React","memo","axiosInstanceLocal","withCredentials","registrationAPI","initialRegistrationState","isRegistered","isLoading","setIsRegistered","setError","registrationReducer","action","Registration","confirm","setConfirm","registration","res","passwordRegExp","register","instance","authAPI","delete","initialProfileState","avatar","setLoadingAC","profileReducer","initialLoginState","isLoggedIn","loginError","logoutStatus","setIsLoggedInAC","loginReducer","Login","rememberMe","setRememberMe","login","PROFILE","setNameAC","err","setErrorAC","link","SET_PASSWORD","REGISTRATION","Profile","profile","logout","alert","img","unknown","description","PasswordRecovery","errorPasswordState","token","useParams","newPassword","createPasswordTC","Home","PASSWORD_RECOVERY","ERROR_PAGE","Routes","exact","path","render","TEST","Header","header","opacity","App","app","reducers","combineReducers","store","createStore","applyMiddleware","thunk","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e9b80e8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Test_page__liHe8\",\"pageTitle\":\"Test_pageTitle__2PLzC\",\"testBox\":\"Test_testBox__1xq6A\",\"input\":\"Test_input__1rmPP\",\"btn\":\"Test_btn__1DVit\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Login_page__1rqXe\",\"pageTitle\":\"Login_pageTitle__2IjiE\",\"link\":\"Login_link__28teA\",\"error\":\"Login_error__2Iou0\",\"input\":\"Login_input__3qKSh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Home_page__2JXRh\",\"pageTitle\":\"Home_pageTitle__2FAeZ\",\"btn\":\"Home_btn__23EaW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Registration_page__34ksj\",\"pageTitle\":\"Registration_pageTitle__2c0eW\",\"error\":\"Registration_error__1QisO\",\"input\":\"Registration_input__T3zXD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"divInput\":\"InputText_divInput__1qHhn\",\"label\":\"InputText_label__3VPuB\",\"input\":\"InputText_input__1JEyR\",\"errorInput\":\"InputText_errorInput__m5052\",\"error\":\"InputText_error__3PbKh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Profile_page__1IHgc\",\"pageTitle\":\"Profile_pageTitle__26v0V\",\"logout\":\"Profile_logout__2cLrI\",\"profile\":\"Profile_profile__1MJF_\",\"img\":\"Profile_img__3zLz5\",\"description\":\"Profile_description__2ywFz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3QKwT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"ForgotPassword_page__3yvuT\",\"pageTitle\":\"ForgotPassword_pageTitle__1GbsX\",\"mainBlock\":\"ForgotPassword_mainBlock__jYH6C\",\"input\":\"ForgotPassword_input__3RkT_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"PasswordRecovery_page__1L_SK\",\"pageTitle\":\"PasswordRecovery_pageTitle__1nRlu\",\"mainBlock\":\"PasswordRecovery_mainBlock__3vsnf\",\"input\":\"PasswordRecovery_input__RBTVf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Checkbox_label__2ovpn\",\"checkbox\":\"Checkbox_checkbox__dBLXe\",\"spanClassName\":\"Checkbox_spanClassName__1fLb1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"divSpan\":\"EditableSpan_divSpan__1d-3t\",\"input\":\"EditableSpan_input__2JDdK\",\"span\":\"EditableSpan_span__N60og\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"Select_select__HDEuA\",\"option\":\"Select_option__3NKNp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"Button_default___XyMl\",\"red\":\"Button_red__2totR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Radio_label__3MmJg\",\"radio\":\"Radio_radio__xLqN3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"ErrorPage_page__f9kgc\",\"pageTitle\":\"ErrorPage_pageTitle__1Wngh\",\"btn\":\"ErrorPage_btn__1PvbD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"ForgotPasswordCheckEmail_page__3y9gZ\",\"pageTitle\":\"ForgotPasswordCheckEmail_pageTitle__2eHiv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__iA4GM\"};","import React from 'react';\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport {Test} from '../../pages/test/Test';\r\nimport {ErrorPage} from \"../../pages/404/ErrorPage\";\r\nimport {SetPassword} from \"../../pages/set-password/setPassword\";\r\nimport {Registration} from \"../../pages/registration/Registration\";\r\nimport {Login} from \"../../pages/login/Login\";\r\nimport {Profile} from \"../../pages/profile/Profile\";\r\nimport {PasswordRecovery} from \"../../pages/password-recovery/PasswordRecovery\";\r\nimport {Home} from \"../../pages/home/Home\";\r\n\r\nexport enum ROUTES {\r\n    HOME = '/',\r\n    TEST = '/test',\r\n    LOGIN = '/login',\r\n    PROFILE = '/profile',\r\n    REGISTRATION = '/registration',\r\n    PASSWORD_RECOVERY = '/password-recovery/:token?',\r\n    SET_PASSWORD = '/set-password',\r\n    ERROR_PAGE = '/404',\r\n}\r\n\r\nexport const Routes = () => {\r\n    return (\r\n        <Switch>\r\n            <Route exact path={ROUTES.HOME} render={() => <Home/>}/>\r\n            <Route path={ROUTES.TEST} render={() => <Test/>}/>\r\n            <Route path={ROUTES.LOGIN} render={() => <Login/>}/>\r\n            <Route path={ROUTES.PROFILE} render={() => <Profile/>}/>\r\n            <Route path={ROUTES.REGISTRATION} render={() => <Registration/>}/>\r\n            <Route path={ROUTES.PASSWORD_RECOVERY} render={() => <PasswordRecovery/>}/>\r\n            <Route path={ROUTES.SET_PASSWORD} render={() => <SetPassword/>}/>\r\n            <Route path={ROUTES.ERROR_PAGE} render={() => <ErrorPage/>}/>\r\n            <Redirect from={'*'} to={ROUTES.ERROR_PAGE}/>\r\n        </Switch>\r\n    )\r\n}\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react'\r\nimport s from './Button.module.scss'\r\n\r\ntype DefaultButtonPropsType = React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype ButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n    value?: string\r\n}\r\n\r\nexport const Button: React.FC<ButtonPropsType> = (\r\n    {\r\n        red, className, value,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const finalClassName = `${red && s.red} ${s.default} ${className}`\r\n\r\n    return (\r\n        <button className={finalClassName}{...restProps}>\r\n            {value}\r\n        </button>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport s from './InputText.module.scss'\r\n\r\ntype DefaultInputPropsType = React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype InputTextPropsType = DefaultInputPropsType & {\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    errorClassName?: string\r\n    label?: string\r\n    labelClassName?: string\r\n}\r\n\r\nexport const InputText: React.FC<InputTextPropsType> = (\r\n    {   type,\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error, label,\r\n        labelClassName,\r\n        className, errorClassName,\r\n\r\n        ...restProps\r\n    } ) => {\r\n    const onChangeCallback = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n        (onEnter && e.key === 'Enter') && onEnter()\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${errorClassName || ''}`\r\n    const finalInputClassName = `${s.input} ${error && s.errorInput} ${s.superInput} ${className || ''}`\r\n\r\n    return (\r\n        <div className={s.divInput}>\r\n            <span className={`${s.label} ${labelClassName || ''}`}>{label}</span>\r\n            <input\r\n                type={type || 'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps}\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport s from './Checkbox.module.scss'\r\n\r\ntype DefaultInputPropsType = React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype CheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nexport const Checkbox: React.FC<CheckboxPropsType> = (\r\n    {\r\n        type,\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children,\r\n\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n        onChange && onChange(e)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className || ''}`\r\n\r\n    return (\r\n        <label className={s.label}>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps}\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport s from './EditableSpan.module.scss'\r\nimport {InputText} from '../inputText/InputText';\r\n\r\ntype DefaultInputPropsType = React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\ntype DefaultSpanPropsType = React.DetailedHTMLProps<React.HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\r\n\r\ntype EditableSpanType = DefaultInputPropsType & {\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n\r\n    spanProps?: DefaultSpanPropsType\r\n}\r\n\r\nexport const EditableSpan: React.FC<EditableSpanType> = (\r\n    {\r\n        autoFocus,\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n\r\n        ...restProps\r\n    }\r\n) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\r\n\r\n    const onEnterCallback = () => {\r\n        setEditMode(false)\r\n        onEnter && onEnter()\r\n    }\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        setEditMode(false)\r\n        onBlur && onBlur(e)\r\n    }\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        setEditMode(true)\r\n        onDoubleClick && onDoubleClick(e)\r\n    }\r\n\r\n    const spanClassName = `${s.span} ${className}`\r\n\r\n    return (\r\n        <div className={s.divSpan}>\r\n            {editMode\r\n                ? (\r\n                    <InputText\r\n                        autoFocus\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n                        className={s.input}\r\n\r\n                        {...restProps}\r\n                    />\r\n                ) : (\r\n                    <span onDoubleClick={onDoubleClickCallBack} className={spanClassName} {...restSpanProps}>\r\n                        ✎ {children || restProps.value}\r\n                    </span>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport s from './Select.module.scss'\r\n\r\ntype DefaultSelectPropsType = React.DetailedHTMLProps<React.SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\ntype SelectPropsType = DefaultSelectPropsType & {\r\n    options: Array<string>\r\n    onChangeOption?: (option: string) => void\r\n}\r\n\r\nexport const Select: React.FC<SelectPropsType> = (\r\n    {\r\n        options,\r\n        onChange, onChangeOption,\r\n        className,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const mappedOptions: JSX.Element[] = options ? options.map((option, index) =>\r\n        <option className={s.option} key={option + '-' + index}>{option}</option>) : []\r\n\r\n    const onChangeCallback = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeOption && onChangeOption(e.currentTarget.value)\r\n        finalClasses = finalClasses + s.onBlur\r\n    }\r\n\r\n    let finalClasses = s.select + ' ' + (className || '')\r\n\r\n    return (\r\n        <select className={finalClasses} onChange={onChangeCallback} {...restProps}>\r\n            {mappedOptions}\r\n        </select>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport s from './Radio.module.scss'\r\n\r\ntype DefaultRadioPropsType = React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype RadioPropsType = DefaultRadioPropsType & {\r\n    options: Array<string>\r\n    onChangeOption?: (option: string) => void\r\n    labelClassName?: string\r\n}\r\n\r\nexport const Radio: React.FC<RadioPropsType> = (\r\n    {\r\n        type, name,\r\n        options, value,\r\n        onChange, onChangeOption,\r\n        className, labelClassName,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeOption && onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n    const mappedOptions: JSX.Element[] = options ?\r\n        options.map((option, index) => (\r\n            <label key={name + '-' + index} className={s.label + ' ' + (labelClassName || '')}>\r\n                <input\r\n                    type={'radio'}\r\n                    name={name}\r\n                    value={option}\r\n                    checked={option === value}\r\n                    onChange={onChangeCallback}\r\n                    className={s.radio + ' ' + (className || '')}\r\n                    {...restProps}\r\n                />\r\n                {option}\r\n            </label>\r\n        )) : []\r\n\r\n    return (\r\n        <>\r\n            {mappedOptions}\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport s from './Range.module.scss'\r\n\r\ntype DefaultInputPropsType = React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype RangePropsType = DefaultInputPropsType & {\r\n    onChangeRange?: (value: number) => void\r\n};\r\n\r\nexport const Range: React.FC<RangePropsType> = (\r\n    {\r\n        type,\r\n        onChange, onChangeRange,\r\n        className,\r\n\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeRange && onChangeRange(+e.currentTarget.value)\r\n    }\r\n\r\n    const finalRangeClassName = `${s.range} ${className || ''}`\r\n\r\n    return (\r\n            <input\r\n                type={'range'}\r\n                onChange={onChangeCallback}\r\n                className={finalRangeClassName}\r\n                value={restProps.value}\r\n\r\n                {...restProps}\r\n            />\r\n    )\r\n}\r\n","import React, {useState} from \"react\";\r\nimport s from './Test.module.scss'\r\nimport {Button} from \"../../common/components/button/Button\";\r\nimport {InputText} from \"../../common/components/inputText/InputText\";\r\nimport {Checkbox} from \"../../common/components/checkbox/Checkbox\";\r\nimport {EditableSpan} from \"../../common/components/editableSpan/EditableSpan\";\r\nimport {Select} from \"../../common/components/select/Select\";\r\nimport {Radio} from \"../../common/components/radioButton/Radio\";\r\nimport {Range} from \"../../common/components/range/Range\";\r\n\r\nexport const Test: React.FC = () => {\r\n    const [textSpan, setTextSpan] = useState<string>('Double click to edit')\r\n    const [valueForRadio, setValueForRadio] = useState<string>('')\r\n\r\n    return (\r\n        <div className={s.page}>\r\n            <div className={s.pageTitle}>Test page</div>\r\n\r\n            <div className={s.testBox}>\r\n                <div>\r\n                    <InputText label={'Default input:'} className={s.input}/>\r\n                    <InputText label={'Error input:'} error={'Some test error'} className={s.input}/>\r\n                </div>\r\n\r\n                <Button value={'Default button'} className={s.btn}/>\r\n                <Button value={'Red button'} red className={s.btn}/>\r\n                <Button value={'Disabled button'} disabled className={s.btn}/>\r\n\r\n                <div style={{display: 'flex', flexDirection: 'column'}}>\r\n                    <Checkbox>Default checkbox</Checkbox>\r\n                    <Checkbox checked>Checked checkbox</Checkbox>\r\n                    <Checkbox disabled>Disabled checkbox</Checkbox>\r\n                </div>\r\n\r\n                <EditableSpan value={textSpan} onChangeText={setTextSpan}/>\r\n\r\n                <Select className={s.select} options={['Option 1', 'Option 2', 'Option 3']}/>\r\n\r\n                <Radio\r\n                    options={['Option 1', 'Option 2', 'Option 3']}\r\n                    value={valueForRadio}\r\n                    onChange={e => setValueForRadio(e.currentTarget.value)}/>\r\n\r\n                <Range />\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport s from './ErrorPage.module.scss'\r\nimport {Button} from \"../../common/components/button/Button\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {ROUTES} from \"../../app/routes/Routes\";\r\n\r\nexport const ErrorPage: React.FC = () => {\r\n    return (\r\n        <div className={s.page}>\r\n            <NavLink to={ROUTES.HOME}><Button value={'GO BACK HOME'} className={s.btn}/></NavLink>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../../bll/store\";\r\nimport s from './ForgotPasswordCheckEmail.module.scss';\r\n\r\nexport const ForgotPasswordCheckEmail: React.FC = () => {\r\n\r\n    const email = useSelector<AppStateType, string>(state => state.setPassword.email);\r\n\r\n\r\n    return (\r\n        <div className={s.page}>\r\n            <div className={s.pageTitle}>Check Email</div>\r\n            <div>\r\n                {`We have sent an Email with instructions to ${email}`}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import axios from \"axios\";\r\n\r\nconst instanceHeroku = axios.create({\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0/\",\r\n})\r\nconst instanceLocal = axios.create({\r\n    // baseURL: \"http://localhost:7542/2.0/\",\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0/\",\r\n})\r\nexport const forgotPasswordAPI = {\r\n    forgot(data: ForgotPasswordType) {\r\n        return instanceHeroku.post<ForgotPasswordType, ForgotPasswordResponseType>('auth/forgot', {\r\n            email: data.email,\r\n            from: \"test-front-admin <ai73a@yandex.by>\",\r\n            message: `<div style=\"background-color: lime; padding: 15px\">password recovery link:<a href='${data.message}/$token$'>Follow the link</a></div>`,\r\n           // message: `<div style=\"background-color: lime; padding: 15px\">password recovery link:<a href='${data.message}/$token$'>Follow the link</a></div>`,\r\n\r\n        })\r\n    },\r\n\r\n    setNewPassword(data: NewPasswordRequestType) {\r\n        return instanceLocal.post<NewPasswordRequestType, NewPasswordResponseType>('auth/set-new-password', {\r\n            password: data.password,\r\n            resetPasswordToken: data.resetPasswordToken,\r\n        })\r\n    }\r\n}\r\n\r\n//forgot(passwordModel:ForgotPasswordType)\r\n//тип отправляемый на сервер\r\n\r\nexport type ForgotPasswordType = {\r\n    email: string,\r\n    // from: string,\"test-front-admin <ai73a@yandex.by>\",  можно указать разработчика фронта)\r\n    message: string,\r\n    //`<div style=\"background-color: lime; padding: 15px\">password recovery link:<a href='http://localhost:3000/#/set-new-password/$token$'>link</a></div>`\r\n    // хтмп-письмо, вместо $token$ бэк вставит токен\r\n}\r\n\r\n//тип приходящий с сервера\r\nexport type ForgotPasswordResponseType = {\r\n    data:\r\n        {\r\n            info: string,\r\n        },\r\n    Error: {\r\n        response: {\r\n            data: {\r\n                error: string\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n//setNewPassword\r\n//тип отправляемый на сервер\r\nexport type NewPasswordRequestType = {\r\n    password: string,\r\n    resetPasswordToken: string,\r\n}\r\n//тип приходящий с сервера\r\nexport type NewPasswordResponseType = {\r\n    data: {\r\n        info: string,\r\n        //уточнить приходит ли там error, при положиетльном ответе\r\n        error: string,\r\n    },\r\n    status: number,\r\n    Error: {\r\n        response: {\r\n            data: {\r\n                error: string\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport {forgotPasswordAPI} from \"../../dal/setPasswordAPI\";\r\n\r\n\r\n//1 типизация\r\ntype setPasswordStateType = {\r\n    email: string,\r\n    password: string,\r\n    showModalWindow: boolean,\r\n    status: number,\r\n    errorEmail: string,\r\n    errorPassword: string,\r\n    loading: boolean,\r\n}\r\n//2 объект\r\nlet initialSetPasswordState: setPasswordStateType = {\r\n    email: \"\",\r\n    password: \"\",\r\n    showModalWindow: false,\r\n    status: 0,\r\n    errorEmail: \"\",\r\n    errorPassword: \"\",\r\n    loading: false,\r\n}\r\n//3 actions\r\nexport const saveEmail = (email: string) => ({type: \"SET-PASSWORD/SAVE_EMAIL\", email} as const);\r\nexport const savePassword = (password: string) => ({type: \"SET-PASSWORD/SAVE_PASSWORD\", password} as const);\r\nexport const savePasswordStatusCode = (status: number) => ({type: \"SET-PASSWORD/SAVE_PASSWORD_STATUS_CODE\", status} as const);\r\n\r\nexport const showModalWindow = (showModalWindow: boolean) => ({type: \"SET-PASSWORD/SHOW_MODAL_WINDOW\", showModalWindow} as const);\r\nexport const showErrorEmail = (errorEmail: string) => ({type: \"SET-PASSWORD/SHOW_ERROR_EMAIL\", errorEmail} as const);\r\nexport const showErrorPassword = (errorPassword: string) => ({type: \"SET-PASSWORD/SHOW_ERROR_PASSWORD\", errorPassword} as const);\r\n\r\nexport const setLoading = (loading: boolean) => ({type: \"SET-PASSWORD/SET_LOADING\", loading} as const);\r\n\r\n//4 reducer\r\nexport const setPasswordReducer = (state = initialSetPasswordState, action: ActionSetPasswordReducerType): setPasswordStateType => {\r\n    switch (action.type) {\r\n        case \"SET-PASSWORD/SAVE_EMAIL\": {\r\n            return {...state, email: action.email}\r\n        }\r\n        case \"SET-PASSWORD/SAVE_PASSWORD\": {\r\n            return {...state, password: action.password}\r\n        }\r\n        case \"SET-PASSWORD/SHOW_MODAL_WINDOW\": {\r\n            return {...state, showModalWindow: action.showModalWindow}\r\n        }\r\n        case \"SET-PASSWORD/SHOW_ERROR_EMAIL\": {\r\n            return {...state, errorEmail: action.errorEmail}\r\n        }\r\n        case \"SET-PASSWORD/SHOW_ERROR_PASSWORD\": {\r\n            return {...state, errorPassword: action.errorPassword}\r\n        }\r\n        case \"SET-PASSWORD/SAVE_PASSWORD_STATUS_CODE\": {\r\n            return {...state, status: action.status}\r\n        }\r\n        case \"SET-PASSWORD/SET_LOADING\": {\r\n            return {...state, loading: action.loading}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//5 actionTypes\r\nexport type ActionSetPasswordReducerType =\r\n    | ReturnType<typeof saveEmail>\r\n    | ReturnType<typeof showModalWindow>\r\n    | ReturnType<typeof savePasswordStatusCode>\r\n    | ReturnType<typeof savePassword>\r\n    | ReturnType<typeof showErrorEmail>\r\n    | ReturnType<typeof showErrorPassword>\r\n    | ReturnType<typeof setLoading>;\r\n\r\n\r\n//6 саночки\r\n\r\nexport const sendInstructionTC = (email: string, ghPagesAddress: string) => {\r\n    return (dispatch: Dispatch) => {\r\n        dispatch(setLoading(true));\r\n        forgotPasswordAPI.forgot({email, message: ghPagesAddress})\r\n            .then((response) => {\r\n                debugger;\r\n                dispatch(showModalWindow(true));\r\n                dispatch(saveEmail(email));\r\n                console.log(response.data.info);\r\n\r\n            })\r\n            .catch(({...Error}) => {\r\n                debugger;\r\n                console.log(Error.response.data.error)\r\n                dispatch(showErrorEmail(Error.response.data.error))\r\n            })\r\n            .finally(() => {\r\n                dispatch(setLoading(false))\r\n            })\r\n    }\r\n}\r\n\r\nexport const createPasswordTC = (newPassword: string, token: string) => {\r\n    return (dispatch: Dispatch) => {\r\n        dispatch(setLoading(true));\r\n\r\n        forgotPasswordAPI.setNewPassword({password: newPassword, resetPasswordToken: token})\r\n            .then((response) => {\r\n                debugger\r\n                dispatch(savePasswordStatusCode(response.status));\r\n                dispatch(showModalWindow(false));\r\n                dispatch(savePassword(newPassword));\r\n            })\r\n            .catch(({...Error}) => {\r\n                debugger;\r\n                console.log(Error.response.data.error);\r\n                dispatch(showErrorPassword(Error.response.data.error));\r\n            })\r\n            .finally(() => {\r\n                dispatch(setLoading(false))\r\n            })\r\n    }\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/preloader.dc94d85e.gif\";","import preloader from \"../../assets/images/preloader.gif\";\r\nimport React from \"react\";\r\n\r\nexport const Preloader: React.FC = () => {\r\n    return <img alt={'loading...'} style={{width: '100px', margin: '10px'}} src={preloader}/>\r\n}","import React, {ChangeEvent, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {sendInstructionTC} from \"../../../bll/reducers/setPasswordReducer\";\r\nimport s from \"./ForgotPassword.module.scss\";\r\nimport {AppStateType} from \"../../../bll/store\";\r\nimport {InputText} from \"../../../common/components/inputText/InputText\";\r\nimport {Button} from \"../../../common/components/button/Button\";\r\nimport {Preloader} from \"../../../common/components/preloader/Preloader\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {ROUTES} from \"../../../app/routes/Routes\";\r\n\r\nexport const ForgotPassword: React.FC = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const emailState = useSelector<AppStateType, string>(state => state.setPassword.email);\r\n    const errorEmailState = useSelector<AppStateType, string>(state => state.setPassword.errorEmail);\r\n    const loadingState = useSelector<AppStateType, boolean>(state => state.setPassword.loading);\r\n\r\n    const [email, setEmail] = useState<string>(emailState);\r\n\r\n\r\n    const emailHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(e.currentTarget.value);\r\n    }\r\n\r\n    const sendInstruction = () => {\r\n        //тут можно сделать красивей\r\n        dispatch(sendInstructionTC(email, 'https://Mevial.github.io/LearnOnCards#/password-recovery'));\r\n    }\r\n\r\n    return (\r\n        <div className={s.page}>\r\n            <div className={s.pageTitle}>Forgot your password?</div>\r\n            <div className={s.mainBlock}>\r\n                <p>Enter your email address and we will send you further instructions</p>\r\n                <div className={s.input}>\r\n                    <InputText label={\"Email\"}\r\n                               value={email}\r\n                               onChange={emailHandler}\r\n                               type={\"text\"}\r\n                               name={\"email\"}/>\r\n                </div>\r\n                <p style={{height: '1em', color: '#de2e2e'}}>{errorEmailState}</p>\r\n                <div>\r\n                    <Button disabled={loadingState} value={\"Send instructions\"} onClick={sendInstruction}/>\r\n                </div>\r\n                <p>Did you remember your password?</p>\r\n                <NavLink to={ROUTES.LOGIN}>Try to log in</NavLink>\r\n                {loadingState && <Preloader/>}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../bll/store\";\r\nimport {ForgotPasswordCheckEmail} from \"./ForgotPasswordCheckEmail/ForgotPasswordCheckEmail\";\r\nimport {ForgotPassword} from \"./ForgotPassword/ForgotPassword\";\r\n\r\nexport const SetPassword: React.FC = React.memo(() => {\r\n\r\n    const showModal = useSelector<AppStateType, boolean>(state => state.setPassword.showModalWindow);\r\n\r\n    return (!showModal ? <ForgotPassword/> : <ForgotPasswordCheckEmail/>)\r\n})\r\n\r\n\r\n\r\n\r\n","import axios from \"axios\";\r\n\r\nexport const axiosInstanceLocal = axios.create({\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0/\",\r\n    // baseURL: 'http://localhost:7542/2.0/',\r\n    withCredentials: true\r\n})\r\n\r\ntype RegisterResponseType = {\r\n    addedUser: Object\r\n    error?: string\r\n}\r\ntype RegisterPayloadType = {\r\n    email: string\r\n    password: string\r\n}\r\n\r\nexport const registrationAPI = {\r\n    register: (email: string, password: string) => {\r\n        return axiosInstanceLocal.post<RegisterPayloadType, {data: RegisterResponseType}>('auth/register', {email, password})\r\n    },\r\n}","import {Dispatch} from \"redux\";\r\nimport {registrationAPI} from \"../../dal/registrationAPI\";\r\n\r\ntype initialRegistrationStateType = typeof initialRegistrationState\r\nlet initialRegistrationState = {\r\n    isRegistered: false,\r\n    error: '',\r\n    isLoading: false\r\n}\r\n\r\nconst registrationReducer = (state: initialRegistrationStateType = initialRegistrationState, action: ActionRegistrationReducerType) => {\r\n    switch (action.type) {\r\n        case \"REGISTER-SET-SUCCESS\":\r\n            return {...state, isRegistered: action.value}\r\n        case \"REGISTER-SET-ERROR\":\r\n            return {...state, error: action.error}\r\n        case \"REGISTER-SET-LOADING\":\r\n            return {...state, isLoading: action.value}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setIsRegistered = (value: boolean) => ({type: 'REGISTER-SET-SUCCESS', value} as const)\r\nexport const setError = (error: string) => ({type: 'REGISTER-SET-ERROR', error} as const)\r\nexport const setLoading = (value: boolean) => ({type: 'REGISTER-SET-LOADING', value} as const)\r\n\r\n//thunk\r\nexport const register = (email: string, password: string) => (dispatch: Dispatch) => {\r\n    dispatch(setLoading(true))\r\n    return registrationAPI.register(email, password)\r\n        .then(res => {\r\n            if (!res.data.error) {\r\n                dispatch(setIsRegistered(true))\r\n                dispatch(setError(''))\r\n            } else {\r\n                dispatch(setIsRegistered(false))\r\n                dispatch(setError(res.data.error))\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            dispatch(setIsRegistered(false))\r\n            dispatch(setError(error.response.data.error + ' ' + (error.response.data.passwordRegExp || '')))\r\n        })\r\n        .finally(() => dispatch(setLoading(false)))\r\n}\r\n\r\nexport type ActionRegistrationReducerType =\r\n    ReturnType<typeof setIsRegistered>\r\n    | ReturnType<typeof setError>\r\n    | ReturnType<typeof setLoading>\r\n\r\nexport default registrationReducer;","import React, {useState} from \"react\";\r\nimport s from './Registration.module.scss'\r\nimport {InputText} from \"../../common/components/inputText/InputText\";\r\nimport {Button} from \"../../common/components/button/Button\";\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {register, setError} from \"../../bll/reducers/registrationReducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../bll/store\";\r\nimport {ROUTES} from \"../../app/routes/Routes\";\r\nimport {Preloader} from \"../../common/components/preloader/Preloader\";\r\n\r\nexport const Registration: React.FC = () => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirm, setConfirm] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const isRegistered = useSelector((state: AppStateType) => state.registration.isRegistered)\r\n    const error = useSelector((state: AppStateType) => state.registration.error)\r\n    const isLoading = useSelector((state: AppStateType) => state.registration.isLoading)\r\n\r\n    const submit = () => {\r\n        if (password === confirm) {\r\n            dispatch(register(email, password))\r\n        } else {\r\n            dispatch(setError('Password\" and \"Confirm password\" should be equal.'))\r\n        }\r\n    }\r\n\r\n    if (isRegistered) {\r\n        return <Redirect to={ROUTES.LOGIN}/>\r\n    }\r\n\r\n    return (<>\r\n            <div className={s.page}>\r\n                <div className={s.pageTitle}>Sign up</div>\r\n\r\n                <div style={{height: '1em'}} className={s.error}>{error}</div>\r\n\r\n                <InputText\r\n                    onChange={(e) => setEmail(e.currentTarget.value)}\r\n                    label={'Email'} error={''}\r\n                    className={s.input}/>\r\n\r\n                <InputText\r\n                    onChange={(e) => setPassword(e.currentTarget.value)}\r\n                    label={'Password'}\r\n                    type={\"password\"} error={''}\r\n                    className={s.input}/>\r\n\r\n                <InputText\r\n                    onChange={(e) => setConfirm(e.currentTarget.value)}\r\n                    label={'Confirm password'} type={\"password\"}\r\n                    error={''}\r\n                    className={s.input}/>\r\n\r\n                <div>\r\n                    <NavLink to={ROUTES.HOME}><Button disabled={isLoading} red value={'Cancel'} className={s.btn}/></NavLink>\r\n                    <Button onClick={submit} value={'Register'} disabled={isLoading}/>\r\n                </div>\r\n\r\n                {isLoading && <Preloader/>}\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\n","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0',\r\n    // baseURL: 'http://localhost:7542/2.0/',\r\n    withCredentials: true\r\n})\r\n\r\n// api\r\nexport const authAPI = {\r\n    login(data: LoginParamsType) {\r\n        return instance.post<LoginParamsType, { data: ProfileType }>('auth/login', data);\r\n    },\r\n    logout() {\r\n        return instance.delete<{info: string, error?: string}>('auth/me');\r\n    },\r\n    authMe() {\r\n        return instance.post<{}, {data: ProfileType}>('auth/me', {})\r\n    },\r\n    updateMe(name: string, avatar: string) {\r\n        return instance.put<{name: string, avatar: string}, {data: {updatedUser: ProfileType, error?: string}}>('auth/me', {name, avatar})\r\n    },\r\n}\r\n\r\n// types\r\nexport type ProfileType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar?: string\r\n    publicCardPacksCount: number\r\n    created: Date\r\n    updated: Date\r\n    isAdmin: boolean;\r\n    verified: boolean;\r\n    rememberMe: boolean;\r\n    error?: string;\r\n}\r\n\r\nexport type LoginParamsType = {\r\n    email: string\r\n    password: string\r\n    rememberMe?: boolean\r\n}\r\n\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport {authAPI} from \"../../dal/loginAPI\";\r\nimport {setIsLoggedInAC} from \"./loginReducer\";\r\nimport {setIsRegistered} from \"./registrationReducer\";\r\n\r\ntype initialProfileStateType = typeof initialProfileState\r\nconst initialProfileState = {\r\n    email: '',\r\n    name: '',\r\n    avatar: '',\r\n    isLoading: false,\r\n}\r\n\r\nconst profileReducer = (state: initialProfileStateType = initialProfileState, action: ActionProfileReducerType) => {\r\n    switch (action.type) {\r\n        case \"PROFILE/SET-NAME\":\r\n            return {...state, name: action.value}\r\n        case \"PROFILE/SET-EMAIL\":\r\n            return {...state, email: action.value}\r\n        case \"PROFILE/SET-AVATAR\":\r\n            return {...state, avatar: action.value}\r\n        case \"REGISTER-SET-LOADING\":\r\n            return {...state, isLoading: action.value}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setNameAC = (value: string) => ({type: \"PROFILE/SET-NAME\", value} as const)\r\nexport const setEmailAC = (value: string) => ({type: \"PROFILE/SET-EMAIL\", value} as const)\r\nexport const setAvatarAC = (value: string) => ({type: \"PROFILE/SET-AVATAR\", value} as const)\r\nexport const setLoadingAC = (value: boolean) => ({type: 'REGISTER-SET-LOADING', value} as const)\r\n\r\n//thunk\r\n// export const authMe = () => (dispatch: Dispatch) => {\r\n//     dispatch(setLoadingAC(true))\r\n//\r\n//     authAPI.authMe()\r\n//         .then(res => {\r\n//             if (!res.data.error) {\r\n//                 dispatch(setNameAC(res.data.name))\r\n//                 dispatch(setNameAC(res.data.avatar || ''))\r\n//                 dispatch(setEmailAC(res.data.email))\r\n//                 dispatch(setIsLoggedInAC(true))\r\n//             } else {\r\n//\r\n//             }\r\n//         })\r\n//         .catch((error) => {\r\n//             alert(error.response.data.error + ' ' + (error.response.data.passwordRegExp || ''))\r\n//         })\r\n//         .finally(() => {\r\n//             dispatch(setLoadingAC(false))\r\n//         })\r\n// }\r\n//\r\n// export const updateMe = (name: string, avatar: string) => (dispatch: Dispatch) => {\r\n//     dispatch(setLoadingAC(true))\r\n//\r\n//     authAPI.updateMe(name, avatar)\r\n//         .then(res => {\r\n//             if (!res.data.error) {\r\n//                 console.log(res.data)\r\n//                 dispatch(setIsLoggedInAC(true))\r\n//             } else {\r\n//\r\n//             }\r\n//         })\r\n//         .catch((error) => {\r\n//             alert(error.response.data.error + ' ' + (error.response.data.passwordRegExp || ''))\r\n//         })\r\n//         .finally(() => {\r\n//             dispatch(setLoadingAC(false))\r\n//         })\r\n// }\r\n\r\nexport const logoutTC = () => (dispatch: Dispatch) => {\r\n    dispatch(setLoadingAC(true))\r\n\r\n    authAPI.logout()\r\n        .then((res) => {\r\n            if (!res.data.error) {\r\n                dispatch(setIsLoggedInAC(false))\r\n                dispatch(setIsRegistered(false))\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            alert(error.response.data.error + ' ' + (error.response.data.passwordRegExp || ''))\r\n        })\r\n        .finally(() => {\r\n            dispatch(setLoadingAC(false))\r\n        })\r\n}\r\n\r\nexport type ActionProfileReducerType =\r\n    ReturnType<typeof setNameAC>\r\n    | ReturnType<typeof setEmailAC>\r\n    | ReturnType<typeof setAvatarAC>\r\n    | ReturnType<typeof setLoadingAC>\r\n    | ReturnType<typeof setIsLoggedInAC>\r\n    | ReturnType<typeof setIsRegistered>\r\n\r\nexport default profileReducer;","import {authAPI, LoginParamsType} from \"../../dal/loginAPI\";\r\nimport {Dispatch} from \"redux\";\r\nimport {setAvatarAC, setEmailAC, setNameAC} from \"./profileReducer\";\r\n\r\ntype initialLoginStateType = typeof initialLoginState\r\nconst initialLoginState = {\r\n    isLoggedIn: false,\r\n    loginError: '',\r\n    logoutStatus: 'idle',\r\n    isLoading: false\r\n}\r\n\r\nconst loginReducer = (state: initialLoginStateType = initialLoginState, action: ActionLoginReducerType): initialLoginStateType => {\r\n    switch (action.type) {\r\n        case \"LOGIN/SET-IS-LOGGED-IN\":\r\n            return {\r\n                ...state,\r\n                isLoggedIn: action.value\r\n            }\r\n        case \"LOGIN/SET-IN-ERROR\":\r\n            return {\r\n                ...state,\r\n                loginError: action.error\r\n            }\r\n        case \"LOGIN/SET-LOADING\":\r\n            return {\r\n                ...state,\r\n                isLoading: action.value\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// actions\r\nexport const setIsLoggedInAC = (value: boolean) => ({type: \"LOGIN/SET-IS-LOGGED-IN\", value} as const)\r\nexport const setErrorAC = (error: string) => ({type: \"LOGIN/SET-IN-ERROR\", error} as const)\r\nexport const setLoadingAC = (value: boolean) => ({type: \"LOGIN/SET-LOADING\", value} as const)\r\n\r\n\r\n//thunk\r\nexport const loginTC = (data: LoginParamsType) => (dispatch: Dispatch<ActionLoginReducerType>) => {\r\n    dispatch(setLoadingAC(true))\r\n\r\n    authAPI.login(data)\r\n        .then(res => {\r\n            dispatch(setIsLoggedInAC(true))\r\n            dispatch(setEmailAC(res.data.email))\r\n            dispatch(setAvatarAC(res.data.avatar || ''))\r\n            dispatch(setNameAC(res.data.name))\r\n        })\r\n        .catch((err) => {\r\n            const error = err.response\r\n                ? err.response.data.error\r\n                : (err.message + `, more details in the console`);\r\n            dispatch(setErrorAC(error))\r\n        })\r\n    .finally(() => {\r\n        dispatch(setLoadingAC(false))\r\n    })\r\n}\r\n\r\n//types\r\nexport type ActionLoginReducerType =\r\n    ReturnType<typeof setIsLoggedInAC>\r\n    | ReturnType<typeof setErrorAC>\r\n    | ReturnType<typeof setAvatarAC>\r\n    | ReturnType<typeof setEmailAC>\r\n    | ReturnType<typeof setNameAC>\r\n    | ReturnType<typeof setLoadingAC>\r\n\r\nexport default loginReducer;","import React, {useState} from \"react\";\r\nimport s from './Login.module.scss'\r\nimport {InputText} from \"../../common/components/inputText/InputText\";\r\nimport {Checkbox} from \"../../common/components/checkbox/Checkbox\";\r\nimport {Button} from \"../../common/components/button/Button\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {loginTC} from \"../../bll/reducers/loginReducer\";\r\nimport {AppStateType} from \"../../bll/store\";\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {ROUTES} from \"../../app/routes/Routes\";\r\nimport {Preloader} from \"../../common/components/preloader/Preloader\";\r\n\r\n\r\nexport const Login: React.FC = () => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [rememberMe, setRememberMe] = useState(false)\r\n\r\n    const isLoggedIn = useSelector<AppStateType>(state => state.login.isLoggedIn)\r\n    const error = useSelector((state:AppStateType) => state.login.loginError)\r\n    const isLoading = useSelector((state:AppStateType) => state.login.isLoading)\r\n\r\n    const dispatch = useDispatch()\r\n    const loginHandler = () => {\r\n        dispatch(loginTC({email, password, rememberMe}))\r\n    }\r\n\r\n    if (isLoggedIn) {\r\n        return <Redirect to={ROUTES.PROFILE}/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.page}>\r\n            <div className={s.pageTitle}>Log In</div>\r\n\r\n            <div style={{height: '1em'}} className={s.error}>{error}</div>\r\n\r\n            <InputText label={'Email'} error={''} className={s.input} value={email}\r\n                       onChange={(e) => setEmail(e.currentTarget.value)}/>\r\n            <InputText label={'Password'} type={'password'} error={''} value={password} className={s.input}\r\n                       onChange={(e) => setPassword(e.currentTarget.value)}/>\r\n\r\n            <Checkbox checked={rememberMe} onChange={(e) => setRememberMe(e.currentTarget.checked)}>Remember me</Checkbox>\r\n\r\n            <div>\r\n                <NavLink to={ROUTES.HOME}><Button disabled={isLoading} red value={'Cancel'} className={s.btn}/></NavLink>\r\n                <Button disabled={isLoading} value={'Log in'} onClick={loginHandler} className={s.btn}/>\r\n            </div>\r\n\r\n            <div>\r\n                <NavLink className={s.link} to={ROUTES.SET_PASSWORD}>Forgot your password?</NavLink>\r\n                <NavLink className={s.link} to={ROUTES.REGISTRATION}>Sign up</NavLink>\r\n            </div>\r\n\r\n            {isLoading && <Preloader/>}\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/unknown.897e230f.png\";","import React from \"react\";\r\nimport s from './Profile.module.scss'\r\nimport unknown from '../../common/assets/images/unknown.png'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../bll/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {ROUTES} from \"../../app/routes/Routes\";\r\nimport {Button} from \"../../common/components/button/Button\";\r\nimport {logoutTC} from \"../../bll/reducers/profileReducer\";\r\nimport {Preloader} from \"../../common/components/preloader/Preloader\";\r\n\r\nexport const Profile: React.FC = () => {\r\n    const name = useSelector((state: AppStateType) => state.profile.name)\r\n    const email = useSelector((state: AppStateType) => state.profile.email)\r\n    const avatar = useSelector((state: AppStateType) => state.profile.avatar)\r\n\r\n    const isLoggedIn = useSelector((state: AppStateType) => state.login.isLoggedIn)\r\n    const isLoading = useSelector((state: AppStateType) => state.login.isLoading)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    if (!isLoggedIn) {\r\n        return <Redirect to={ROUTES.LOGIN}/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.page}>\r\n            <div className={s.pageTitle}>Profile</div>\r\n            <div className={s.logout}>\r\n                {isLoggedIn && <Button red value={'logout'} onClick={() => dispatch(logoutTC())}/>}\r\n            </div>\r\n            <div className={s.profile}>\r\n                <img className={s.img} src={avatar || unknown} alt=\"avatar\"/>\r\n\r\n                <div className={s.description}>\r\n                    <div><h3>Name: </h3><p>{name}</p></div>\r\n                    <div><h3>Email: </h3><p>{email}</p></div>\r\n                </div>\r\n            </div>\r\n\r\n            {isLoading && <Preloader/>}\r\n        </div>\r\n    )\r\n}\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport s from './PasswordRecovery.module.scss'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Redirect, useParams} from \"react-router-dom\";\r\nimport {createPasswordTC} from \"../../bll/reducers/setPasswordReducer\";\r\nimport {AppStateType} from \"../../bll/store\";\r\nimport {Button} from \"../../common/components/button/Button\";\r\nimport {InputText} from \"../../common/components/inputText/InputText\";\r\nimport {Preloader} from \"../../common/components/preloader/Preloader\";\r\n\r\nexport const PasswordRecovery: React.FC = () => {\r\n    const dispatch = useDispatch();\r\n    const [password, setPassword] = useState<string>(\"\");\r\n\r\n    const errorPasswordState = useSelector<AppStateType, string>(state => state.setPassword.errorPassword);\r\n    const loadingState = useSelector<AppStateType, boolean>(state => state.setPassword.loading);\r\n\r\n\r\n    const passwordHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(e.currentTarget.value);\r\n    }\r\n    const {token} = useParams<{ token: string }>();\r\n    console.log(token)\r\n\r\n    const sendInstruction = () => {\r\n        dispatch(createPasswordTC(password, token));\r\n    }\r\n    const status = useSelector<AppStateType, number>(state => state.setPassword.status)\r\n    if (status === 200) {\r\n        debugger\r\n        return (<Redirect to={\"/login\"}/>)\r\n    }\r\n    return (\r\n        <div className={s.page}>\r\n            <div className={s.pageTitle}>Create new password</div>\r\n            <div className={s.mainBlock}>\r\n                <div className={s.input}>\r\n                    <InputText\r\n                        label={\"New password\"}\r\n                        value={password}\r\n                        onChange={passwordHandler}\r\n                        type={\"password\"}\r\n                        name={\"password\"}/>\r\n                </div>\r\n                <p style={{height: '1em', color: '#de2e2e'}}>{errorPasswordState}</p>\r\n\r\n                <div>\r\n                    <Button disabled={loadingState} value={\"Confirm new password\"} onClick={sendInstruction}/>\r\n                </div>\r\n\r\n                {loadingState && <Preloader/>}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport s from './Home.module.scss'\r\nimport {Button} from \"../../common/components/button/Button\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {ROUTES} from \"../../app/routes/Routes\";\r\n\r\nexport const Home: React.FC = () => {\r\n    return (\r\n        <div className={s.page}>\r\n            <div className={s.pageTitle}>All pages</div>\r\n\r\n            <NavLink to={ROUTES.LOGIN}><Button value={'login'} className={s.btn}/></NavLink>\r\n            <NavLink to={ROUTES.PROFILE}><Button value={'profile'} className={s.btn}/></NavLink>\r\n            <NavLink to={ROUTES.REGISTRATION}><Button value={'registration'} className={s.btn}/></NavLink>\r\n            <NavLink to={ROUTES.PASSWORD_RECOVERY}><Button value={'password-recovery'} className={s.btn}/></NavLink>\r\n            <NavLink to={ROUTES.SET_PASSWORD}><Button value={'set-password'} className={s.btn}/></NavLink>\r\n            <NavLink to={ROUTES.ERROR_PAGE}><Button value={'404'} className={s.btn}/></NavLink>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Button} from \"../../common/components/button/Button\";\r\nimport { ROUTES } from '../routes/Routes';\r\nimport s from './Header.module.scss'\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../bll/store\";\r\n\r\nexport const Header = () => {\r\n    const isLoggedIn = useSelector((state: AppStateType) => state.login.isLoggedIn)\r\n\r\n    return (\r\n        <div className={s.header}>\r\n            <div>\r\n                <NavLink to={ROUTES.TEST}><Button value={'test-components'} className={s.btn}/></NavLink>\r\n                <NavLink to={ROUTES.HOME}><Button value={'all-pages'} className={s.btn}/></NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to={ROUTES.PROFILE}><Button value={'Profile'} className={s.btn}/></NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink style={{opacity: isLoggedIn ? '0' : '1'}} to={ROUTES.LOGIN}><Button value={'Log In'} className={s.btn}/></NavLink>\r\n                <NavLink style={{opacity: isLoggedIn ? '0' : '1'}} to={ROUTES.REGISTRATION}><Button value={'Sign Up'} className={s.btn}/></NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {Routes} from \"./routes/Routes\";\r\nimport s from './App.module.scss'\r\nimport {Header} from \"./header/Header\";\r\n\r\nexport const App = () => {\r\n    return (\r\n        <div className={s.app}>\r\n            <Header/>\r\n            <Routes/>\r\n        </div>\r\n    );\r\n}\r\n//dsada\r\n\r\n//dasa","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunk, {ThunkAction} from \"redux-thunk\";\r\nimport profileReducer from \"./reducers/profileReducer\";\r\nimport loginReducer from \"./reducers/loginReducer\";\r\nimport registrationReducer from \"./reducers/registrationReducer\";\r\nimport {setPasswordReducer} from \"./reducers/setPasswordReducer\";\r\n\r\nconst reducers = combineReducers({\r\n    profile: profileReducer,\r\n    login: loginReducer,\r\n    registration: registrationReducer,\r\n    setPassword:setPasswordReducer,\r\n})\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunk));\r\n\r\nexport type AppStateType = ReturnType<typeof reducers>\r\nexport type AppActionsType = any\r\n\r\nexport type AppThunkType<ReturnType = void> = ThunkAction<ReturnType, AppStateType, unknown, AppActionsType>\r\n\r\n// @ts-ignore\r\nwindow.store= store\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {App} from \"./app/App\";\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"./bll/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <HashRouter>\r\n          <Provider store={store}>\r\n              <App/>\r\n          </Provider>\r\n      </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}